async function postCommentServer(cmtData){
    try {
        const url='/comment/post';
        const config={
            method : 'post',
            headers : {
                'content-type':'application/json; charset=utf-8'
            },
            body:JSON.stringify(cmtData)
        };
        const resp=await fetch(url,config);
        const result=await resp.text();
        return result;
    } catch (error) {
        console.log(error);
    }
}

document.getElementById('cmtPostBtn').addEventListener('click',()=>{
    const cmtText=document.getElementById('cmtText').value;
    console.log(cmtText);
    if(cmtText==null||cmtText==''){
        alert("댓글을 입력해주세요.");
        document.getElementById('cmtText').focus(); //커서를 cmtText창으로 
        return false;
    }else{
        let cmtData={
            cot_brd_num : bnoVal,
            cot_writer : document.getElementById('cmtWriter').innerText,
            cot_content : cmtText
        };
  
        
        console.log(cmtData);
       postCommentServer(cmtData).then(result=>{
            if(result>0){
                alert('댓글 등록 성공~!!');
            }
            //화면에 출력
            getCommentList(cmtData.cot_brd_num);
        });
    }
});

async function spreadCommentFromServer(cot_brd_num){
    console.log(cot_brd_num);
    try {
        const resp=await fetch('/comment/'+cot_brd_num);
        const result=await resp.json();
        return result;
    } catch (error) {
        console.log(error);
    }
}

function getCommentList(cot_brd_num){
    spreadCommentFromServer(cot_brd_num).then(result=>{
    console.log(result);
    const ul=document.getElementById('cmtListArea');
    if(result.length>0){
        ul.innerHTML="";
        for(let cvo of result){
            let li=`<li data-cot_num="${cvo.cot_num}" class="list-group-item d-flex justify-content-between align-items-start">`;
                li+=`<div class="ms-2 me-auto"><div class="fw-bold">${cvo.cot_writer}</div>`;
                li+=`<input type="text" class="form-control" id="cmtTextMod" value="${cvo.cot_content}"></div>`;
                li+=`<span class="badge bg-dark rounded-pill">${cvo.cot_regdate}</span>`;
                li+=`<c:if test="${ses.mem_id eq cvo.cot_writer}">`;
                li+=`<button class="btn btn-success mod"  type="button">%</button>`;
                li+=`<button class="btn btn-success del"  type="button">x</button>`;
                li+=`</c:ig>`;
                li+=`</li>`;
                ul.innerHTML+=li;
            }
        }else{
                let li=`<li class="list-group-item d-flex justify-content-between align-items-start">`;
                ul.innerHTML+=li;
            }
    })
}

async function editCommentToServer(cmtTextMod){
    try {
        const url='/comment/'+cmtTextMod.cot_num;
        const config={
            method : 'put',
            headers : {
                'content-type' : 'application/json; charset=utf-8'
            },
            body:JSON.stringify(cmtTextMod)
        };
        const resp=await fetch(url,config);
        const result=await resp.text();
        return result;
    } catch (error) {
        console.log(error);
    }
}

document.addEventListener('click',(e)=>{
    if(e.target.classList.contains('mod')){
        let li=e.target.closest('li');
        let cnoVal=li.dataset.cot_num;
        let textContent=li.querySelector('#cmtTextMod').value;

        let cmtDataMod={
            cot_num : cnoVal,
            cot_content : textContent
        };
        console.log(cmtDataMod);
        editCommentToServer(cmtDataMod).then(result=>{
            if(result>0){
                alert('댓글 수정 성공~!!');
            }
            getCommentList(bnoVal);
        });
    }else if(e.target.classList.contains('del')){
        //삭제 값 처리
        let li=e.target.closest('li');
        let cnoVal=li.dataset.cot_num;
        
        
        deleteCommentToServer(cnoVal).then(result =>{
                if(result>0){

                    alert("댓글 삭제 성공");
                }
                getCommentList(bnoVal);
            })
    }
}
)

async function deleteCommentToServer(cnoVal){
    try {
        const url = '/comment/'+cnoVal;
        const config = {
            method : 'delete',
            headers : { 
                'content-type' : 'application/json; charset=UTF-8'
            },
            body : JSON.stringify(cnoVal)
        };
        const resp = await fetch(url, config);
        const result = await resp.text();
        return result;
    } catch (error) {
        console.log(error);
    }
}




