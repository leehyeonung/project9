package com.ezen.book.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

import com.ezen.book.domain.CommentVO;
import com.ezen.book.service.CommentService;

import lombok.extern.slf4j.Slf4j;



@Slf4j
@RequestMapping("/comment/*")
@Controller
public class CommentController {

	@Inject
	private CommentService csv;

	//value : mapping값 설정, consumes : 가져오는 값의 형태(application/json),
	//produces : 보낼때의 형식{MediaType.text_plain_value}
	@PostMapping(value="/post", consumes="application/json", produces= {MediaType.TEXT_PLAIN_VALUE})
	public ResponseEntity<String> post(@RequestBody CommentVO cvo){
		log.info(">>> comment post : "+cvo.toString());
		int isUp = csv.register(cvo);
		log.info(">>> register isUp : "+(isUp>0? "ok" : "fail"));
		
		return isUp>0? new ResponseEntity<String>("1",HttpStatus.OK)
				: new ResponseEntity<String>(HttpStatus.INTERNAL_SERVER_ERROR);
	}
	
	@GetMapping(value="/{cot_brd_num}",produces= {MediaType.APPLICATION_JSON_VALUE})
	public ResponseEntity<List<CommentVO>> spread(@PathVariable("cot_brd_num")int cot_brd_num){
		log.info(">>>> comment List cot_brd_num : "+cot_brd_num);
		List<CommentVO> list = csv.getList(cot_brd_num);
		return new ResponseEntity<List<CommentVO>>(list,HttpStatus.OK);
	}
	
	@PutMapping(value = "/{cot_num}", consumes = "application/json", produces= {MediaType.TEXT_PLAIN_VALUE})
	public ResponseEntity<String> edit(@PathVariable("cot_num")int cot_num, @RequestBody CommentVO cvo){
		log.info(">>>> comment modifyt cot_num : "+cot_num);
		log.info(">>>> comment modifyt cno : "+cvo.toString());
		int isUp=csv.modify(cvo);
		return isUp>0?
				new ResponseEntity<String>("1",HttpStatus.OK)
				: new ResponseEntity<String>(HttpStatus.INTERNAL_SERVER_ERROR);
	}
	
	@DeleteMapping(value="/{cot_num}", consumes = "application/json")
	   public ResponseEntity<String>delete(@PathVariable("cot_num")int cot_num){
	      log.info(">>> comment delete cno : "+cot_num);
	      int isUp = csv.delete(cot_num);
	      return isUp>0? 
	            new ResponseEntity<String>("1",HttpStatus.OK)
	            : new ResponseEntity<String>(HttpStatus.INTERNAL_SERVER_ERROR);
	   }
	
}
